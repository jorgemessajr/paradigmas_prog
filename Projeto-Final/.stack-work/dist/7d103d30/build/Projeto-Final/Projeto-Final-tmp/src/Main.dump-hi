
==================== FINAL INTERFACE ====================
2018-08-09 03:53:32.1812059 UTC

interface main:Main 8043
  interface hash: 5873e7cb542618b9121b134a59d8659b
  ABI hash: dc3b55c970269e91e75f560ecc079e80
  export-list hash: 2540500b9dacc403c2b078a33ee8f2a5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0628a2dfc7343b289ae043db6a115f7c
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.graph
  Main.main
module dependencies:
package dependencies: array-0.5.2.0 base-4.11.1.0*
                      containers-0.5.11.0* deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Tree
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  base-4.11.1.0:System.IO 7331ec6891ba7763ad75720258619382
import  -/  containers-0.5.11.0:Data.Graph 1eea6326c27a2a04f8f20da4ce092926
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
042b4c793aec58ba2a1a122c47a442bf
  graph :: Data.Graph.Graph
  {- Unfolding: (Data.Graph.$wbuildG 1# 6# Main.graph1) -}
df37b6d75bd56cd2454404b7341a5fbf
  graph1 :: [Data.Graph.Edge]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Graph.Edge
                   Main.graph16
                   Main.graph2) -}
2efc2c9a7368f73526653e61bd2b1409
  graph10 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
98de97fe91339a4ceee2926698e3f5b5
  graph11 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
8399d31d05ab1810d8a9e3fead3241b0
  graph12 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.graph14, Main.graph13)) -}
5a778c0113af5db11bf269146c6f66ed
  graph13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
06a5d9a40203a7dc62c8fb36835a3fd2
  graph14 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
5af5765176c1f43d349355800ce84333
  graph15 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.graph11, Main.graph14)) -}
16cac9cf71aeefb71e7c09d4819efe1b
  graph16 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.graph14, Main.graph11)) -}
26a984028c4de41e606c8fad3530c07a
  graph2 :: [Data.Graph.Edge]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Graph.Edge
                   Main.graph15
                   Main.graph3) -}
abcf4f491f9b67e8bb19848239f47157
  graph3 :: [Data.Graph.Edge]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Graph.Edge
                   Main.graph12
                   Main.graph4) -}
72a8ccd70e149d1705b4a45426985a50
  graph4 :: [Data.Graph.Edge]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Graph.Edge
                   Main.graph9
                   Main.graph5) -}
a202139c317c24223e492dc0c0ace482
  graph5 :: [Data.Graph.Edge]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Graph.Edge
                   Main.graph6
                   (GHC.Types.[] @ Data.Graph.Edge)) -}
bedc3dfc7f11a43b58cf6a32a4df7dfd
  graph6 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.graph8, Main.graph7)) -}
4e239c6b29d34a5479347090bed2db41
  graph7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
0303ebedc910672cd77fcf60e33babde
  graph8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
58ad65b4e1e6243bc3ddb790f41b173c
  graph9 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.graph11, Main.graph10)) -}
ab8014094998e2e4cff8256ebab70942
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
b0da54a92e6f0c15ad61fd291af3113a
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True) -}
9405372f77180e234ec843e3c7b5ad24
  main2 :: GHC.Base.String
  {- Unfolding: (Main.main3 (GHC.Types.[] @ GHC.Types.Char)) -}
5051873cd1607af0f0501cb282d71db0
  main3 :: GHC.Show.ShowS
  {- Unfolding: (GHC.Arr.$w$cshowsPrec
                   @ GHC.Types.Int
                   @ [Data.Graph.Vertex]
                   GHC.Arr.$fIxInt
                   GHC.Show.$fShowInt
                   GHC.Show.$fShow[]_$s$fShow[]
                   0#
                   Main.graph) -}
e4683cd977ca273c7ea781f8e377072f
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

