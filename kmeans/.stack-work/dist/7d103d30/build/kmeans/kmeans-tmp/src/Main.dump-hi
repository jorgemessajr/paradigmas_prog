
==================== FINAL INTERFACE ====================
2018-08-19 00:36:27.8825827 UTC

interface main:Main 8043
  interface hash: b01044a511e8513858f70cbbb640c74f
  ABI hash: 1e364e9d4b57d1bbbe9e2fed0d3fac37
  export-list hash: 75b415c1e7c3b2b14506675bd7523cd9
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3d15a00b1914bf37c1eccb3b7eb05aaa
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.parseFile
module dependencies:
package dependencies: Win32-2.6.1.0 array-0.5.2.0 base-4.11.1.0
                      binary-0.8.5.1 bytestring-0.10.8.2 clock-0.7.2 containers-0.5.11.0
                      deepseq-1.4.3.0 formatting-6.3.6 ghc-prim-0.5.2.0 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1 primitive-0.6.3.0
                      scientific-0.3.6.2 split-0.2.3.3 text-1.2.3.0 time-1.8.0.2
                      transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         clock-0.7.2:System.Clock containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array text-1.2.3.0:Data.Text
                         text-1.2.3.0:Data.Text.Lazy
import  -/  base-4.11.1.0:Data.OldList 3987872d5de68d40c22cd1c30825ad08
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:GHC.List 95910b50fba2204d1a3364fe070ebf2b
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  base-4.11.1.0:System.Environment 40e596440ae829e459888fac38f65a65
import  -/  base-4.11.1.0:System.IO 7331ec6891ba7763ad75720258619382
import  -/  base-4.11.1.0:Text.Read 5c288a0919cb418cf58278e23fdb845d
import  -/  clock-0.7.2:System.Clock 7488d17371a87b2d71d16c769beecdd0
import  -/  deepseq-1.4.3.0:Control.DeepSeq 2a5b8dca95ab754971360a4cfde5100d
import  -/  formatting-6.3.6:Formatting 2adf1e5e11c5fc8e24d111a3b776371e
import  -/  formatting-6.3.6:Formatting.Clock 6dd355c0bc56a5730fc620922b822cb1
import  -/  formatting-6.3.6:Formatting.Internal 31e3337cbdf185e2ce1760b7b9d2a17a
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  split-0.2.3.3:Data.List.Split 01ad367b876d4e416dfdd3844f8bca4b
import  -/  split-0.2.3.3:Data.List.Split.Internals 6085f63bdb168652befc04ebbbf180b0
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
fbc129d500ca40a2e9183234d3fe3b9e
  $wfail ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (GHC.Magic.noinline
                    @ (forall a. [GHC.Types.Char] -> GHC.Types.IO a)
                    GHC.IO.failIO1
                      `cast`
                    (forall (a :: <*>_N).
                     <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                    @ ()
                    Main.main5)
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   w) -}
c64062f94ad4ae0e1e434364ec3b3c59
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
65ef1968bd42ebefce6bfa854a71f65d
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   [] -> Main.$wfail ipv
                   : fname ds
                   -> case ds of wild1 {
                        [] -> Main.$wfail ipv
                        : sk ds2
                        -> case ds2 of wild2 {
                             [] -> Main.$wfail ipv
                             : sit ds3
                             -> case ds3 of wild3 {
                                  [] -> Main.$wfail ipv
                                  : schunks ds4
                                  -> case ds4 of wild4 {
                                       []
                                       -> case GHC.IO.Handle.FD.openFile1
                                                 fname
                                                 GHC.IO.IOMode.ReadMode
                                                 ipv of ds5 { (#,#) ipv2 ipv3 ->
                                          case GHC.IO.Handle.Text.hGetContents1
                                                 ipv3
                                                 ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                                          case GHC.Prim.newAlignedPinnedByteArray#
                                                 @ GHC.Prim.RealWorld
                                                 16#
                                                 8#
                                                 ipv4 of ds7 { (#,#) ipv6 ipv7 ->
                                          case GHC.Prim.unsafeFreezeByteArray#
                                                 @ GHC.Prim.RealWorld
                                                 ipv7
                                                 ipv6 of ds8 { (#,#) ipv8 ipv9 ->
                                          let {
                                            ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv9
                                          } in
                                          case {__pkg_ccall_GC clock-0.7.2 GHC.Prim.Addr#
                                                                           -> GHC.Prim.State#
                                                                                GHC.Prim.RealWorld
                                                                           -> (# GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld #)}
                                                 ptr
                                                 ipv8 of wild5 { Unit# ds9 ->
                                          case GHC.Prim.readInt64OffAddr#
                                                 @ GHC.Prim.RealWorld
                                                 ptr
                                                 0#
                                                 ds9 of ds10 { (#,#) ipv10 ipv11 ->
                                          case GHC.Prim.readInt64OffAddr#
                                                 @ GHC.Prim.RealWorld
                                                 (GHC.Prim.plusAddr# ptr 8#)
                                                 0#
                                                 ipv10 of ds11 { (#,#) ipv12 ipv13 ->
                                          case GHC.Prim.touch#
                                                 @ 'GHC.Types.UnliftedRep
                                                 @ GHC.Prim.ByteArray#
                                                 ipv9
                                                 ipv12 of s4 { DEFAULT ->
                                          case GHC.Prim.newAlignedPinnedByteArray#
                                                 @ GHC.Prim.RealWorld
                                                 16#
                                                 8#
                                                 s4 of ds12 { (#,#) ipv14 ipv15 ->
                                          case GHC.Prim.unsafeFreezeByteArray#
                                                 @ GHC.Prim.RealWorld
                                                 ipv15
                                                 ipv14 of ds13 { (#,#) ipv16 ipv17 ->
                                          let {
                                            ptr1 :: GHC.Prim.Addr#
                                            = GHC.Prim.byteArrayContents# ipv17
                                          } in
                                          case {__pkg_ccall_GC clock-0.7.2 GHC.Prim.Addr#
                                                                           -> GHC.Prim.State#
                                                                                GHC.Prim.RealWorld
                                                                           -> (# GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld #)}
                                                 ptr1
                                                 ipv16 of wild6 { Unit# ds14 ->
                                          case GHC.Prim.readInt64OffAddr#
                                                 @ GHC.Prim.RealWorld
                                                 ptr1
                                                 0#
                                                 ds14 of ds15 { (#,#) ipv18 ipv19 ->
                                          case GHC.Prim.readInt64OffAddr#
                                                 @ GHC.Prim.RealWorld
                                                 (GHC.Prim.plusAddr# ptr1 8#)
                                                 0#
                                                 ipv18 of ds16 { (#,#) ipv20 ipv21 ->
                                          case GHC.Prim.touch#
                                                 @ 'GHC.Types.UnliftedRep
                                                 @ GHC.Prim.ByteArray#
                                                 ipv17
                                                 ipv20 of s1 { DEFAULT ->
                                          case (Formatting.Clock.timeSpecs1
                                                  @ (GHC.Types.IO ())
                                                  Main.main2
                                                  (System.Clock.TimeSpec ipv11 ipv13)
                                                  (System.Clock.TimeSpec ipv19 ipv21))
                                                 `cast`
                                               (GHC.Types.N:IO[0] <()>_R)
                                                 s1 of ds17 { (#,#) ipv22 ipv23 ->
                                          (# ipv22, GHC.Tuple.() #) } } } } } } } } } } } } } } }
                                       : ipv2 ipv3 -> Main.$wfail ipv } } } } } }) -}
e03a032151fa0d9c0e4b29682053bca6
  main2 :: Data.Text.Internal.Builder.Builder -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,C(C1(C1(U)))>,
     Unfolding: (\ (a1 :: Data.Text.Internal.Builder.Builder)[OneShot] ->
                 Formatting.Internal.$fIsStringFormat1
                   @ (GHC.Types.IO ())
                   @ (GHC.Types.IO ())
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ (GHC.Types.IO ())
                      @ (GHC.Types.IO ())
                      @~ <GHC.Types.IO ()>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <GHC.Types.IO
                                                             ()>_N <GHC.Types.IO ()>_N)
                   Main.main3
                   (\ (a2 :: Data.Text.Internal.Builder.Builder)[OneShot]
                      (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case GHC.Magic.runRW#
                           @ ('GHC.Types.TupleRep
                                '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                           @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                [Data.Text.Internal.Text] #)
                           (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case GHC.Prim.newByteArray#
                                   @ GHC.Prim.RealWorld
                                   224#
                                   s1 of ds { (#,#) ipv ipv1 ->
                            (a1 `cast` (Data.Text.Internal.Builder.N:Builder[0])
                               @ GHC.Prim.RealWorld
                               (a2 `cast` (Data.Text.Internal.Builder.N:Builder[0])
                                  @ GHC.Prim.RealWorld
                                  Data.Text.Internal.Builder.toLazyTextWith1
                                    `cast`
                                  (<Data.Text.Internal.Builder.Buffer GHC.Prim.RealWorld>_R
                                   ->_R Sym (GHC.ST.N:ST[0]
                                                 <GHC.Prim.RealWorld>_N
                                                 <[Data.Text.Internal.Text]>_R)))
                               (Data.Text.Internal.Builder.Buffer
                                  @ GHC.Prim.RealWorld
                                  ipv1
                                  0#
                                  0#
                                  112#))
                              `cast`
                            (GHC.ST.N:ST[0]
                                 <GHC.Prim.RealWorld>_N <[Data.Text.Internal.Text]>_R)
                              ipv }) of ds1 { (#,#) ipv ipv1 ->
                    Formatting.Internal.fprint_go
                      (Data.Text.Lazy.dropEnd_go (Data.Text.Lazy.fromChunks_go ipv1))
                      eta1 })
                     `cast`
                   (<Data.Text.Internal.Builder.Builder>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))) -}
21465b237e9b3ef4a3c2412cc28f196e
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main4) -}
0cdbb659128e48e1dc33de61ba0a439c
  main4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\\n"#) -}
ca41bb018b2855ca8d9fe4a09cc69c7b
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main6) -}
154dfe5935abc571cc0ee51df20d1cc4
  main6 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at src\\Main.hs:21:3-27"#) -}
42e296172ae410110c6d3d916ba26019
  main7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
bbbcf9af6d92dfd7d41219b9d41610d7
  parseFile :: GHC.Base.String -> [[GHC.Types.Double]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (file :: GHC.Base.String) ->
                 GHC.Base.build
                   @ [GHC.Types.Double]
                   (\ @ b1
                      (c :: [GHC.Types.Double] -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Types.Char]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Types.Double]
                         @ b1
                         @ [GHC.Types.Char]
                         c
                         Main.parseFile1)
                      n
                      (Data.OldList.lines file))) -}
97cebf48ff4ec5909d2eb7ef27d824fc
  parseFile1 :: GHC.Base.String -> [GHC.Types.Double]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (l :: GHC.Base.String) -> Main.parseFile_go l) -}
0398dc10b4ac890cc889400d103ce52c
  parseFile_go :: [GHC.Types.Char] -> [GHC.Types.Double]
  {- Arity: 1, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

